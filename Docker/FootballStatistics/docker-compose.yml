version: '3.9'
services:
  mongodb:

    image: mongo
    container_name: mongodb
    hostname: mongodb-host
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=rootdb
    networks:
      - default
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - default

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "playerStatistics:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9093,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  consumerkafka:

    build:
      context: ../../Microservices/ConsumerKafkaFootballStatistics
      dockerfile: Dockerfile
    ports:
      - 8282:8282
    depends_on:
      - mongodb
      - kafka
    networks:
      - default
  
  producer:

    build:
      context: ../../Microservices/ProducerFootballStatistics
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - default

  producerkafka:

    build:
      context: ../../Microservices/ProducerKafkaFootballStatistics
      dockerfile: Dockerfile
    container_name: producerkafka
    ports:
      - 8181:8181
    depends_on:
      - kafka
    networks:
      - default

networks:
  default:
    name: mongodb_network
